{
  "v": 1,
  "id": "1f1e809e-737f-4696-ab19-36f9c64531d1",
  "rev": 1,
  "name": "test3",
  "summary": "ingestion from kafka audit topic",
  "description": "",
  "vendor": "vijay",
  "url": "",
  "parameters": [],
  "entities": [
    {
      "v": "1",
      "type": {
        "name": "stream",
        "version": "1"
      },
      "id": "69d2ae19-c44c-4c35-9434-074341545370",
      "data": {
        "alarm_callbacks": [],
        "outputs": [],
        "remove_matches": {
          "@type": "boolean",
          "@value": true
        },
        "title": {
          "@type": "string",
          "@value": "teststream"
        },
        "stream_rules": [
          {
            "type": {
              "@type": "string",
              "@value": "PRESENCE"
            },
            "field": {
              "@type": "string",
              "@value": "gl2_source_input"
            },
            "value": {
              "@type": "string",
              "@value": ""
            },
            "inverted": {
              "@type": "boolean",
              "@value": false
            },
            "description": {
              "@type": "string",
              "@value": ""
            }
          }
        ],
        "alert_conditions": [],
        "matching_type": {
          "@type": "string",
          "@value": "AND"
        },
        "disabled": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "default_stream": {
          "@type": "boolean",
          "@value": false
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.4+7528370"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9b39dc5b-5658-4125-aa9a-3a092afbf8ea",
      "data": {
        "title": {
          "@type": "string",
          "@value": "testparsejson2"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"testparsejson2\"\nwhen\n  true\nthen\n  set_fields(to_map(flatten_json(to_string($message.message), \"json\")));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.4+7528370"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline",
        "version": "1"
      },
      "id": "ce46cd18-c713-4ac3-98af-4b09d57ec3e3",
      "data": {
        "title": {
          "@type": "string",
          "@value": "test1"
        },
        "description": {
          "@type": "string",
          "@value": "test1"
        },
        "source": {
          "@type": "string",
          "@value": "pipeline \"test1\"\nstage 0 match either\nrule \"testparsejson2\"\nend"
        },
        "connected_streams": [
          {
            "@type": "string",
            "@value": "69d2ae19-c44c-4c35-9434-074341545370"
          }
        ]
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.4+7528370"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "4317f321-4aeb-4f0a-b8ac-4c56a9133995",
      "data": {
        "title": {
          "@type": "string",
          "@value": "testselectiveparsejson"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"testselectiveparsejson\"\nwhen\n  true\nthen\n  set_fields(select_jsonpath(\n    $message.message,\n    {\n      metadata_event_type: \"$.metadata.event.type\",\n      metadata_event_action: \"$.metadata.event.action\",\n      metadata_event_createdAt: \"$.metadata.event.createdAt\",\n      metadata_event_state_status: \"$.metadata.event.state.status\",\n      metadata_trace_service: \"$.metadata.trace.service\",\n      metadata_trace_tags_source: \"$.metadata.trace.tags.source\",\n      metadata_trace_tags_destination: \"$.metadata.trace.tags.destination\"\n    }\n  ));\n  set_field(\n    field : \"message\",\n    value : \"TRUNCATED\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.4+7528370"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "input",
        "version": "1"
      },
      "id": "9cd6a015-44e0-4301-86af-7311b62992b1",
      "data": {
        "title": {
          "@type": "string",
          "@value": "testkafka1"
        },
        "configuration": {
          "custom_properties": {
            "@type": "string",
            "@value": ""
          },
          "offset_reset": {
            "@type": "string",
            "@value": "largest"
          },
          "topic_filter": {
            "@type": "string",
            "@value": "^topic-event-audit$"
          },
          "threads": {
            "@type": "integer",
            "@value": 2
          },
          "zookeeper": {
            "@type": "string",
            "@value": ""
          },
          "throttling_allowed": {
            "@type": "boolean",
            "@value": false
          },
          "bootstrap_server": {
            "@type": "string",
            "@value": "kafka:29092"
          },
          "legacy_mode": {
            "@type": "boolean",
            "@value": false
          },
          "fetch_min_bytes": {
            "@type": "integer",
            "@value": 5
          },
          "group_id": {
            "@type": "string",
            "@value": "graylog2"
          },
          "charset_name": {
            "@type": "string",
            "@value": "UTF-8"
          },
          "fetch_wait_max": {
            "@type": "integer",
            "@value": 100
          }
        },
        "static_fields": {},
        "type": {
          "@type": "string",
          "@value": "org.graylog2.inputs.raw.kafka.RawKafkaInput"
        },
        "global": {
          "@type": "boolean",
          "@value": false
        },
        "extractors": []
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.4+7528370"
        }
      ]
    }
  ]
}