networks:
  test-net:
    name: test-net
    # external: true

services:
  kafka:
    networks:
      - test-net
    image: docker.io/bitnami/kafka:3.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # BITNAMI_DEBUG: "yes"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093,LISTENER_DOCKER://kafka:29092,LISTENER_EXTERN://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_EXTERN://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERN:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_MESSAGE_MAX_BYTES: 200000000
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      KAFKA_ENABLE_KRAFT: "true"
    healthcheck:
      test: ["CMD" ,"/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh","--bootstrap-server","kafka:9092"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s


  kafka-provisioning:
    container_name: kafka-provisioning
    networks:
      - test-net
    image: docker.io/bitnami/kafka:3.5.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-event-audit --replication-factor 1 --partitions 4
      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      "

  kafka-mon-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    deploy:
      replicas: 1
    restart: on-failure
    hostname: kafka-mon-ui
    ports:
    - "9080:8080"
    networks:
      - test-net
    environment:
      - KAFKA_BROKERS=kafka:29092